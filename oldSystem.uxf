<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>96</x>
      <y>426</y>
      <w>474</w>
      <h>396</h>
    </coordinates>
    <panel_attributes>eu.gir.girsignals.signalbox::SignalBoxTileEntity
--
+ERROR_STRING = "error": String
+REMOVE_SIGNAL = "removeSignal": String
-LINKED_POS_LIST = "linkedPos": String
-GUI_TAG = "guiTag": String
-LINK_TYPE = "linkType": String
-linkedBlocks = new HashMap(10): Map&lt;BlockPos, LinkType&gt;
-modeGrid = new HashMap(10): Map&lt;Point, SignalNode&gt;
-signals = new HashMap(10): Map&lt;BlockPos, Signal&gt;
-guiTag = new NBTTagCompound(): NBTTagCompound
-pathWayEnd = new HashMap(): HashMap&lt;ArrayList&lt;SignalNode&gt;, Integer&gt;
-SERVICE = Executors.newCachedThreadPool(): ExecutorService
--
+writeToNBT(final NBTTagCompound compound): NBTTagCompound
+readFromNBT(final NBTTagCompound compound): void
-updateModeGridFromUI(): void
-loadAndConfig(final int speed, final BlockPos lastPosition, final BlockPos nextPosition): void
-config(final int speed, final SignalTileEnity lastTile, final SignalTileEnity nextTile, final ISignalAutoconfig override): void
-loadAndConfig(final int speed, final BlockPos lastPosition, final BlockPos nextPosition, final ISignalAutoconfig override): void
-loadAndReset(final BlockPos position): void
-sendGuiTag(): void
-resendSignalTilesToUI(): void
-resetPathway(final Point resetPoint): void
-resetSignal(final Point resetPoint, final SignalNode currentNode, final EnumGuiMode guiMode): void
-setPower(final BlockPos position, final boolean power): void
-onWayAdd(final ArrayList&lt;SignalNode&gt; nodes): void
-setPathway(final ArrayList&lt;SignalNode&gt; nodes, final int speed): void
+updateTag(final NBTTagCompound compound): void
+getTag(): NBTTagCompound
+hasLink(): boolean
+link(final BlockPos linkedPos): boolean
-updateSingle(final SignalTileEnity signaltile, final Chunk unused): void
+onLoad(): void
+unlink(): boolean
+getSignal(final BlockPos pos): Signal
+getPositions(): ImmutableMap&lt;BlockPos, LinkType&gt;
-lockPathway(final ArrayList&lt;SignalNode&gt; pathway): void
+updateRedstonInput(final BlockPos pos, final boolean status): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>576</x>
      <y>426</y>
      <w>408</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>eu.gir.girsignals.signalbox::SignalNode
--
-MODE = "mode": String
-ROTATION = "rotation": String
-OPTION = "option": String
-point: Point
-possibleConnections = new HashMap(): HashMap&lt;Entry&lt;Point, Point&gt;, Entry&lt;EnumGuiMode, Rotation&gt;&gt;
-possibleModes = new HashMap(): HashMap&lt;Entry&lt;EnumGuiMode, Rotation&gt;, PathOption&gt;
--
+SignalNode(final Point point2): ctor
+add(final EnumGuiMode mode, final Rotation rot): void
+has(final EnumGuiMode mode, final Rotation rot): boolean
+remove(final EnumGuiMode mode, final Rotation rot): void
+post(): void
+getPoint(): Point
+connections(): Set&lt;Entry&lt;Point, Point&gt;&gt;
+forEach(final BiConsumer&lt;Entry&lt;EnumGuiMode, Rotation&gt;, PathOption&gt; applier): void
+isEmpty(): boolean
+write(final NBTTagCompound compound): void
+read(final NBTTagCompound compound): void
+getID(): String
+setID(final String id): void
+getOption(final EnumGuiMode mode): Optional&lt;PathOption&gt;
+getOption(final EnumGuiMode guimode, final Rotation rotation): Optional&lt;PathOption&gt;
+getOption(final Entry&lt;EnumGuiMode, Rotation&gt; entry): Optional&lt;PathOption&gt;
+getOption(final Point p1, final Point p2): Optional&lt;PathOption&gt;
+getRotations(final EnumGuiMode mode): List&lt;Rotation&gt;
+isUsed(): boolean
+has(final EnumGuiMode mode): boolean
+toString(): String
+hashCode(): int
+equals(final Object obj): boolean
+iterator(): Iterator&lt;PathOption&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>150</y>
      <w>972</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>eu.gir.girsignals.signalbox::SignalBoxUtil
--
+FREE_COLOR = 0xFF000000: int
+SELECTED_COLOR = 0xFF00FF00: int
+USED_COLOR = 0xFFFF0000: int
+REQUEST_WAY = "requestWay": String
+RESET_WAY = "resetWay": String
+POINT0 = "P": String
+POINT1 = "P1": String
+POINT2 = "P2": String
--
-SignalBoxUtil(): ctor
+fromNBT(final NBTTagCompound comp, final String name): Point
+toNBT(final NBTTagCompound comp, final String name, final Point point): void
-calculateHeuristic(final Point p1, final Point p2): double
-isRS(final SignalNode node, final SignalNode other): boolean
-isHP(final SignalNode node, final SignalNode other): boolean
+getRotationFromDelta(final Point delta): Rotation
+getOffset(final Rotation rotation, final Point point): Point
+checkApplicable(final SignalNode neighbour, final SignalNode previouse, final boolean isRS): boolean
+checkApplicable(final SignalNode neighbour, final SignalNode previouse, final boolean isRS, final Rotation apply): boolean
-connectionCheck(final Point p1, final Point p2, final SignalNode cSNode, final Point currentNode, final Point neighbour, final SignalNode next, final Point previouse, final Map&lt;Point, Point&gt; closedList, final Entry&lt;Point, Point&gt; entry, final boolean isRS): boolean
+requestWay(final Map&lt;Point, SignalNode&gt; modeGrid, final Point p1, final Point p2): Optional&lt;ArrayList&lt;SignalNode&gt;&gt;
~drawRect(final int left, final int top, final int right, final int bottom, final int color): void
~drawTextured(final UIEntity entity, final int textureID): void
~drawLines(final int x1, final int x2, final int y1, final int y2, final int color): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>96</x>
      <y>828</y>
      <w>288</w>
      <h>186</h>
    </coordinates>
    <panel_attributes>eu.gir.girsignals.signalbox::PathOption
--
-PATH_USAGE = "pathUsage": String
-SPEED = "speed": String
-pathUsage: EnumPathUsage
-linkedPositions = new BlockPos[LinkType.values().length]: BlockPos[]
-speed = Integer.MAX_VALUE: int
--
+PathOption(): ctor
+PathOption(final EnumPathUsage pathUsage): ctor
+PathOption(final NBTTagCompound compound): ctor
+writeNBT(): NBTTagCompound
+getPathUsage(): EnumPathUsage
+setPathUsage(final EnumPathUsage pathUsage): void
+getLinkedPosition(final LinkType type): BlockPos
+setLinkedPosition(final LinkType type, final BlockPos linkedPosition): void
+getSpeed(): int
+setSpeed(final int speed): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>390</x>
      <y>828</y>
      <w>204</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>eu.gir.girsignals.signalbox::Point
--
-serialVersionUID = -4441798278173012509L: long
-x, y: int
--
+Point(final int x, final int y): ctor
+Point(final Point point): ctor
+getX(): int
+setX(final int x): void
+getY(): int
+setY(final int y): void
+translate(final int x, final int y): void
+delta(final Point other): Point
+equals(final Object obj): boolean
+hashCode(): int
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
