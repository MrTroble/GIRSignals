{
    "currentSignal": "semaphoresignal",
    "nextSignal": "semaphoresignal",
    "savedPredicates": {
        "stop": "config(wing1.FALSE) && config(wing2.FALSE)",
        "drive": "config(wing1.TRUE) && config(wing2.FALSE)",
        "slow": "config(wing1.TRUE) && config(wing2.TRUE)"
    },
    "values": {
        "map(stop)": ["semavr.VR0"],
        "map(drive)": ["semavr.VR1"],
        "map(slow)": ["semavr.VR2"],

        "speed(==.1)": ["zs3.Z1", "wing1.TRUE", "wing2.TRUE"],
        "speed(==.2)": ["zs3.Z2", "wing1.TRUE", "wing2.TRUE"],
        "speed(==.3)": ["zs3.Z3", "wing1.TRUE", "wing2.TRUE"],
        "speed(==.4)": ["wing1.TRUE", "wing2.TRUE"],
        "speed(==.5)": ["zs3.Z5", "wing1.TRUE", "wing2.TRUE"],
        "speed(==.6)": ["zs3.Z6", "wing1.TRUE", "wing2.TRUE"],
        "speed(==.7)": ["zs3.Z7", "wing1.TRUE", "wing2.TRUE"],
        "speed(==.8)": ["zs3.Z8", "wing1.TRUE", "wing2.FALSE"],
        "speed(==.9)": ["zs3.Z9", "wing1.TRUE", "wing2.FALSE"],
        "speed(==.10)": ["zs3.Z10", "wing1.TRUE", "wing2.FALSE"],
        "speed(==.11)": ["zs3.Z11", "wing1.TRUE", "wing2.FALSE"],
        "speed(==.12)": ["zs3.Z12", "wing1.TRUE", "wing2.FALSE"],
        "speed(==.13)": ["zs3.Z13", "wing1.TRUE", "wing2.FALSE"],
        "speed(==.14)": ["zs3.Z14", "wing1.TRUE", "wing2.FALSE"],
        "speed(==.15)": ["zs3.Z15", "wing1.TRUE", "wing2.FALSE"]
    }
}